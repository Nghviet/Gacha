{
  "contractName": "Master",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Master.sol\":\"Master\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Card.sol\":{\"keccak256\":\"0x75df27e16f0e7fc1b5023cb7620088bfc16584d07dcb3e0b76e12446d442c7cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2aaf6053193b94d3bb1b7343d8bda7f8e2783f08070d65cfccbfa8816d16381a\",\"dweb:/ipfs/QmZNtzUmMuYPm9hPbYQgfcrYgdJy6PFhCtA4nqBBt8Fzrh\"]},\"/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Master.sol\":{\"keccak256\":\"0x2e7f0611bebabec0c9c1f7f970c5530c1b8a5e27acd0f5dcb4498fd34d82a9f4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://173e97a5d99c93892c8c9ef09d4cc887bf57f6164908a046f9f8fc79aeb6e2f4\",\"dweb:/ipfs/QmP7YrUBWpZozMhygBfAEjVz11rxd1xnm5yRUnc7P9yCtH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b61057c806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101c4565b6040516100659190610491565b60405180910390f35b610088600480360381019061008391906103b3565b6101ed565b005b610092610396565b73ffffffffffffffffffffffffffffffffffffffff166100b06101c4565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fd906104cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f5610396565b73ffffffffffffffffffffffffffffffffffffffff166102136101c4565b73ffffffffffffffffffffffffffffffffffffffff1614610269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610260906104cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d0906104ac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506103ad8161052f565b92915050565b6000602082840312156103c557600080fd5b60006103d38482850161039e565b91505092915050565b6103e5816104fd565b82525050565b60006103f86026836104ec565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061045e6020836104ec565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506104a660008301846103dc565b92915050565b600060208201905081810360008301526104c5816103eb565b9050919050565b600060208201905081810360008301526104e581610451565b9050919050565b600082825260208201905092915050565b60006105088261050f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610538816104fd565b811461054357600080fd5b5056fea264697066735822122079bfa780fa1bb79ea5f675c7df1cef7b95b707c4c5a1718f42d675c0d460797364736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101c4565b6040516100659190610491565b60405180910390f35b610088600480360381019061008391906103b3565b6101ed565b005b610092610396565b73ffffffffffffffffffffffffffffffffffffffff166100b06101c4565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fd906104cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f5610396565b73ffffffffffffffffffffffffffffffffffffffff166102136101c4565b73ffffffffffffffffffffffffffffffffffffffff1614610269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610260906104cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d0906104ac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506103ad8161052f565b92915050565b6000602082840312156103c557600080fd5b60006103d38482850161039e565b91505092915050565b6103e5816104fd565b82525050565b60006103f86026836104ec565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061045e6020836104ec565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506104a660008301846103dc565b92915050565b600060208201905081810360008301526104c5816103eb565b9050919050565b600060208201905081810360008301526104e581610451565b9050919050565b600082825260208201905092915050565b60006105088261050f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610538816104fd565b811461054357600080fd5b5056fea264697066735822122079bfa780fa1bb79ea5f675c7df1cef7b95b707c4c5a1718f42d675c0d460797364736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "117:137:2:-:0;;;;;;;;;;;;;884:17:5;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;117:137:2;;598:104:6;651:15;685:10;678:17;;598:104;:::o;117:137:2:-;;;;;;;",
  "deployedSourceMap": "117:137:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:145:5;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2011:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1717:145;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;2011:240::-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:6:-;651:15;685:10;678:17;;598:104;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:241::-;;246:2;234:9;225:7;221:23;217:32;214:2;;;262:1;259;252:12;214:2;297:1;314:53;359:7;350:6;339:9;335:22;314:53;:::i;:::-;304:63;;276:97;208:175;;;;:::o;390:113::-;473:24;491:5;473:24;:::i;:::-;468:3;461:37;455:48;;:::o;511:375::-;;671:67;735:2;730:3;671:67;:::i;:::-;664:74;;771:34;767:1;762:3;758:11;751:55;840:8;835:2;830:3;826:12;819:30;877:2;872:3;868:12;861:19;;657:229;;;:::o;895:332::-;;1055:67;1119:2;1114:3;1055:67;:::i;:::-;1048:74;;1155:34;1151:1;1146:3;1142:11;1135:55;1218:2;1213:3;1209:12;1202:19;;1041:186;;;:::o;1235:222::-;;1362:2;1351:9;1347:18;1339:26;;1376:71;1444:1;1433:9;1429:17;1420:6;1376:71;:::i;:::-;1333:124;;;;:::o;1464:416::-;;1664:2;1653:9;1649:18;1641:26;;1714:9;1708:4;1704:20;1700:1;1689:9;1685:17;1678:47;1739:131;1865:4;1739:131;:::i;:::-;1731:139;;1635:245;;;:::o;1887:416::-;;2087:2;2076:9;2072:18;2064:26;;2137:9;2131:4;2127:20;2123:1;2112:9;2108:17;2101:47;2162:131;2288:4;2162:131;:::i;:::-;2154:139;;2058:245;;;:::o;2311:163::-;;2426:6;2421:3;2414:19;2463:4;2458:3;2454:14;2439:29;;2407:67;;;;:::o;2482:91::-;;2544:24;2562:5;2544:24;:::i;:::-;2533:35;;2527:46;;;:::o;2580:121::-;;2653:42;2646:5;2642:54;2631:65;;2625:76;;;:::o;2708:117::-;2777:24;2795:5;2777:24;:::i;:::-;2770:5;2767:35;2757:2;;2816:1;2813;2806:12;2757:2;2751:74;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport './Card.sol';\n\ncontract Master is Card {\n\tmapping(address => string) masters;\n\tmapping(address => uint) created;\n\tmapping(address => Servant) choosen;\n}\n",
  "sourcePath": "/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Master.sol",
  "ast": {
    "absolutePath": "/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Master.sol",
    "exportedSymbols": {
      "Master": [
        422
      ]
    },
    "id": 423,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 405,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "id": 406,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:2"
      },
      {
        "absolutePath": "/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Card.sol",
        "file": "./Card.sol",
        "id": 407,
        "nodeType": "ImportDirective",
        "scope": 423,
        "sourceUnit": 109,
        "src": "95:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 408,
              "name": "Card",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 108,
              "src": "136:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Card_$108",
                "typeString": "contract Card"
              }
            },
            "id": 409,
            "nodeType": "InheritanceSpecifier",
            "src": "136:4:2"
          }
        ],
        "contractDependencies": [
          108,
          850,
          873
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 422,
        "linearizedBaseContracts": [
          422,
          108,
          850,
          873
        ],
        "name": "Master",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 413,
            "mutability": "mutable",
            "name": "masters",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 422,
            "src": "144:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 412,
              "keyType": {
                "id": 410,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "152:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "144:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 411,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "163:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 417,
            "mutability": "mutable",
            "name": "created",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 422,
            "src": "181:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 416,
              "keyType": {
                "id": 414,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "189:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "181:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 415,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "200:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 421,
            "mutability": "mutable",
            "name": "choosen",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 422,
            "src": "216:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Servant_$47_storage_$",
              "typeString": "mapping(address => struct Card.Servant)"
            },
            "typeName": {
              "id": 420,
              "keyType": {
                "id": 418,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "224:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "216:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Servant_$47_storage_$",
                "typeString": "mapping(address => struct Card.Servant)"
              },
              "valueType": {
                "contractScope": null,
                "id": 419,
                "name": "Servant",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 47,
                "src": "235:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Servant_$47_storage_ptr",
                  "typeString": "struct Card.Servant"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 423,
        "src": "117:137:2"
      }
    ],
    "src": "36:219:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Master.sol",
      "exportedSymbols": {
        "Master": [
          422
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 405,
        "name": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 406,
        "name": "PragmaDirective",
        "src": "60:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 109,
          "absolutePath": "/Users/NgHViet/Desktop/Blockchain/gacha/blockchain/contracts/Card.sol",
          "file": "./Card.sol",
          "scope": 423,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 407,
        "name": "ImportDirective",
        "src": "95:20:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            108,
            850,
            873
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            422,
            108,
            850,
            873
          ],
          "name": "Master",
          "scope": 423
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Card",
                  "referencedDeclaration": 108,
                  "type": "contract Card"
                },
                "id": 408,
                "name": "UserDefinedTypeName",
                "src": "136:4:2"
              }
            ],
            "id": 409,
            "name": "InheritanceSpecifier",
            "src": "136:4:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "masters",
              "overrides": null,
              "scope": 422,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => string)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 410,
                    "name": "ElementaryTypeName",
                    "src": "152:7:2"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 411,
                    "name": "ElementaryTypeName",
                    "src": "163:6:2"
                  }
                ],
                "id": 412,
                "name": "Mapping",
                "src": "144:26:2"
              }
            ],
            "id": 413,
            "name": "VariableDeclaration",
            "src": "144:34:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "created",
              "overrides": null,
              "scope": 422,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 414,
                    "name": "ElementaryTypeName",
                    "src": "189:7:2"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 415,
                    "name": "ElementaryTypeName",
                    "src": "200:4:2"
                  }
                ],
                "id": 416,
                "name": "Mapping",
                "src": "181:24:2"
              }
            ],
            "id": 417,
            "name": "VariableDeclaration",
            "src": "181:32:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "choosen",
              "overrides": null,
              "scope": 422,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Card.Servant)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Card.Servant)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 418,
                    "name": "ElementaryTypeName",
                    "src": "224:7:2"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Servant",
                      "referencedDeclaration": 47,
                      "type": "struct Card.Servant"
                    },
                    "id": 419,
                    "name": "UserDefinedTypeName",
                    "src": "235:7:2"
                  }
                ],
                "id": 420,
                "name": "Mapping",
                "src": "216:27:2"
              }
            ],
            "id": 421,
            "name": "VariableDeclaration",
            "src": "216:35:2"
          }
        ],
        "id": 422,
        "name": "ContractDefinition",
        "src": "117:137:2"
      }
    ],
    "id": 423,
    "name": "SourceUnit",
    "src": "36:219:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x941644415850be115272682D665B41373C564B70",
      "transactionHash": "0xedc26e0bdf3dee7d34858b7940f5e1d753c1185110910f3e73d81e27dce225c3"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-17T12:31:40.030Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}